Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                              ./tools.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
                              ./tools.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              ./lcd.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
                              ./tools.o (__subsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o) (__addsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o)
                              ./tools.o (__fixsfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o) (__fixunssfsi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                              ./tools.o (__floatsisf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o) (__fp_round)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o) (__fp_zero)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                              ./tools.o (__mulsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o) (__mulsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o)
                              ./tools.o (pow)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o) (exp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_powser.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o) (__fp_powser)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o) (inverse)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o) (ldexp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o) (log)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(modf.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o) (modf)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o) (__divsf3)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_mpack.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o) (__fp_mpack)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
                              ./tools.o (atoi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                              ./main.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

bufferRx            0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD ./adc.o
LOAD ./lcd.o
LOAD ./main.o
LOAD ./tools.o
LOAD ./uart.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xefc
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_fplib
                0x0000000000000026       0x28 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
 .progmem.gcc_fplib
                0x000000000000004e       0x5a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
 *(.progmem*)
                0x00000000000000a8                . = ALIGN (0x2)
                0x00000000000000a8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000a8        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000a8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000a8                __ctors_start = .
 *(.ctors)
                0x00000000000000a8                __ctors_end = .
                0x00000000000000a8                __dtors_start = .
 *(.dtors)
                0x00000000000000a8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000a8        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x00000000000000a8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000a8        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b4       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x00000000000000b4                __do_copy_data
 .init4         0x00000000000000ca       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000ca                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000da        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000de        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x00000000000000de                __vector_1
                0x00000000000000de                __vector_12
                0x00000000000000de                __bad_interrupt
                0x00000000000000de                __vector_6
                0x00000000000000de                __vector_3
                0x00000000000000de                __vector_13
                0x00000000000000de                __vector_17
                0x00000000000000de                __vector_7
                0x00000000000000de                __vector_5
                0x00000000000000de                __vector_4
                0x00000000000000de                __vector_9
                0x00000000000000de                __vector_2
                0x00000000000000de                __vector_15
                0x00000000000000de                __vector_8
                0x00000000000000de                __vector_14
                0x00000000000000de                __vector_10
                0x00000000000000de                __vector_16
                0x00000000000000de                __vector_18
 .text          0x00000000000000e0        0x0 ./adc.o
 .text          0x00000000000000e0        0x0 ./lcd.o
 .text          0x00000000000000e0        0x0 ./main.o
 .text          0x00000000000000e0        0x0 ./tools.o
 .text          0x00000000000000e0        0x0 ./uart.o
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_powser.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(modf.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_mpack.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
 .text          0x00000000000000e0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x00000000000000e0                . = ALIGN (0x2)
 *(.text.*)
 .text.adcinit  0x00000000000000e0        0xa ./adc.o
                0x00000000000000e0                adcinit
 .text.adcread  0x00000000000000ea        0xc ./adc.o
                0x00000000000000ea                adcread
 .text.adcstart
                0x00000000000000f6        0x4 ./adc.o
                0x00000000000000f6                adcstart
 .text.lcdwrite
                0x00000000000000fa       0x38 ./lcd.o
                0x00000000000000fa                lcdwrite
 .text.lcdinit  0x0000000000000132       0x6e ./lcd.o
                0x0000000000000132                lcdinit
 .text.lcdclear
                0x00000000000001a0        0xc ./lcd.o
                0x00000000000001a0                lcdclear
 .text.lcdcursor
                0x00000000000001ac        0x2 ./lcd.o
                0x00000000000001ac                lcdcursor
 .text.lcdgotoxy
                0x00000000000001ae       0x1a ./lcd.o
                0x00000000000001ae                lcdgotoxy
 .text.lcdline2
                0x00000000000001c8       0x26 ./lcd.o
                0x00000000000001c8                lcdline2
 .text.lcdwritechar
                0x00000000000001ee       0x14 ./lcd.o
                0x00000000000001ee                lcdwritechar
 .text.lcdwritestring
                0x0000000000000202       0x24 ./lcd.o
                0x0000000000000202                lcdwritestring
 .text.forfun   0x0000000000000226       0x4e ./lcd.o
                0x0000000000000226                forfun
 .text.__vector_11
                0x0000000000000274       0x50 ./main.o
                0x0000000000000274                __vector_11
 .text.startup.main
                0x00000000000002c4      0x142 ./main.o
                0x00000000000002c4                main
 .text.reverse  0x0000000000000406       0x2a ./tools.o
                0x0000000000000406                reverse
 .text.intToStr
                0x0000000000000430       0x60 ./tools.o
                0x0000000000000430                intToStr
 .text.ftoa     0x0000000000000490       0xea ./tools.o
                0x0000000000000490                ftoa
 .text.write_buffer
                0x000000000000057a       0x2a ./tools.o
                0x000000000000057a                write_buffer
 .text.read_buffer
                0x00000000000005a4       0x2c ./tools.o
                0x00000000000005a4                read_buffer
 .text.check_buffer
                0x00000000000005d0       0x16 ./tools.o
                0x00000000000005d0                check_buffer
 .text.init_buffer
                0x00000000000005e6        0xa ./tools.o
                0x00000000000005e6                init_buffer
 .text.match    0x00000000000005f0       0xf6 ./tools.o
                0x00000000000005f0                match
 .text.pheripheralInit
                0x00000000000006e6       0x1c ./tools.o
                0x00000000000006e6                pheripheralInit
 .text.UART_Init
                0x0000000000000702       0x10 ./uart.o
                0x0000000000000702                UART_Init
 .text.UART_IT_Init
                0x0000000000000712        0x4 ./uart.o
                0x0000000000000712                UART_IT_Init
 .text.UART_Tx  0x0000000000000716        0x8 ./uart.o
                0x0000000000000716                UART_Tx
 .text.UARTWriteString
                0x000000000000071e       0x24 ./uart.o
                0x000000000000071e                UARTWriteString
 .text.libgcc.mul
                0x0000000000000742        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000742       0x18 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                0x0000000000000742                __udivmodqi4
 .text.libgcc   0x000000000000075a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x000000000000075a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x000000000000075a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x000000000000075a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x000000000000075a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x000000000000075a        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000000000000075a       0x26 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
                0x000000000000075a                __divmodhi4
                0x000000000000075a                _div
 .text.libgcc   0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000780        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000780       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000780                __udivmodhi4
 .text.libgcc   0x00000000000007a8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000007a8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000007a8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000007a8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000007a8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.avr-libc.fplib
                0x00000000000007a8        0xa /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
                0x00000000000007a8                __subsf3
                0x00000000000007aa                __addsf3
 .text.avr-libc.fplib
                0x00000000000007b2       0xc0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
                0x00000000000007cc                __addsf3x
 .text.avr-libc.fplib
                0x0000000000000872        0xa /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o)
                0x0000000000000872                __fixsfsi
 .text.avr-libc.fplib
                0x000000000000087c       0x58 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                0x000000000000087c                __fixunssfsi
 .text.avr-libc.fplib
                0x00000000000008d4       0x7a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                0x00000000000008d4                __floatunsisf
                0x00000000000008d8                __floatsisf
 .text.avr-libc.fplib
                0x000000000000094e        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                0x000000000000094e                __fp_inf
 .text.avr-libc.fplib
                0x000000000000095a        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                0x000000000000095a                __fp_nan
 .text.avr-libc.fplib
                0x0000000000000960        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                0x0000000000000960                __fp_pscA
 .text.avr-libc.fplib
                0x000000000000096e        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                0x000000000000096e                __fp_pscB
 .text.avr-libc.fplib
                0x000000000000097c       0x22 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                0x000000000000097c                __fp_round
 .text.avr-libc.fplib
                0x000000000000099e       0x44 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                0x000000000000099e                __fp_split3
                0x00000000000009ae                __fp_splitA
 .text.avr-libc.fplib
                0x00000000000009e2        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                0x00000000000009e2                __fp_zero
                0x00000000000009e4                __fp_szero
 .text.avr-libc.fplib
                0x00000000000009f0        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                0x00000000000009f0                __mulsf3
 .text.avr-libc.fplib
                0x00000000000009f4       0xc2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                0x0000000000000a08                __mulsf3x
                0x0000000000000a0c                __mulsf3_pse
 .text.avr-libc.fplib
                0x0000000000000ab6       0x98 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o)
                0x0000000000000ab6                pow
 .text.avr-libc.fplib
                0x0000000000000b4e       0x62 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
                0x0000000000000b58                exp
 .text.avr-libc.fplib
                0x0000000000000bb0       0x4a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_powser.o)
                0x0000000000000bb0                __fp_powser
 .text.avr-libc.fplib
                0x0000000000000bfa        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o)
                0x0000000000000bfa                inverse
 .text.avr-libc.fplib
                0x0000000000000c08       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o)
                0x0000000000000c0c                ldexp
 .text.avr-libc.fplib
                0x0000000000000c74       0x8a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
                0x0000000000000c7e                log
 .text.avr-libc.fplib
                0x0000000000000cfe       0x66 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(modf.o)
                0x0000000000000cfe                modff
                0x0000000000000cfe                modf
 .text.avr-libc.fplib
                0x0000000000000d64        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                0x0000000000000d64                __divsf3
 .text.avr-libc.fplib
                0x0000000000000d68       0xcc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                0x0000000000000d7e                __divsf3x
                0x0000000000000d82                __divsf3_pse
 .text.avr-libc.fplib
                0x0000000000000e34       0x1c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_mpack.o)
                0x0000000000000e34                __fp_mpack
                0x0000000000000e38                __fp_mpack_finite
 .text.avr-libc
                0x0000000000000e50       0x3a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
                0x0000000000000e50                atoi
 .text.avr-libc
                0x0000000000000e8a       0x3e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                0x0000000000000e8a                itoa
 .text.avr-libc
                0x0000000000000ec8       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
                0x0000000000000ec8                __mulhi_const_10
 .text.avr-libc
                0x0000000000000ed8       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000ed8                strrev
                0x0000000000000ef8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000ef8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x0000000000000ef8                exit
                0x0000000000000ef8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000ef8        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000efc                _etext = .

.data           0x0000000000800060       0x60 load address 0x0000000000000efc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./adc.o
 .data          0x0000000000800060        0x0 ./lcd.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./tools.o
 .data          0x0000000000800060        0x0 ./uart.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_powser.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(modf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_mpack.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800060       0x23 ./lcd.o
 .rodata.str1.1
                0x0000000000800083       0x3c ./main.o
                                         0x41 (size before relaxing)
 *(.gnu.linkonce.d*)
                0x00000000008000c0                . = ALIGN (0x2)
 *fill*         0x00000000008000bf        0x1 
                0x00000000008000c0                _edata = .
                0x00000000008000c0                PROVIDE (__data_end, .)

.bss            0x00000000008000c0        0x1
                0x00000000008000c0                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x00000000008000c0        0x0 ./adc.o
 .bss           0x00000000008000c0        0x0 ./lcd.o
 .bss           0x00000000008000c0        0x0 ./main.o
 .bss           0x00000000008000c0        0x0 ./tools.o
 .bss           0x00000000008000c0        0x0 ./uart.o
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_powser.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(modf.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_mpack.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000c0        0x1 ./main.o
                0x00000000008000c0                bufferRx
                0x00000000008000c1                PROVIDE (__bss_end, .)
                0x0000000000000efc                __data_load_start = LOADADDR (.data)
                0x0000000000000f5c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c1        0x0
                0x00000000008000c1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c1                PROVIDE (__noinit_end, .)
                0x00000000008000c1                _end = .
                0x00000000008000c1                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x3858
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000000744      0x4bc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(addsf3x.o)
                                        0x4c8 (size before relaxing)
 .stab          0x0000000000000c00       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixsfsi.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000c6c      0x240 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fixunssfsi.o)
                                        0x24c (size before relaxing)
 .stab          0x0000000000000eac      0x318 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(floatsisf.o)
                                        0x324 (size before relaxing)
 .stab          0x00000000000011c4       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_inf.o)
                                         0x84 (size before relaxing)
 .stab          0x000000000000123c       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_nan.o)
                                         0x60 (size before relaxing)
 .stab          0x0000000000001290       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscA.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000001314       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_pscB.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000001398       0xfc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_round.o)
                                        0x108 (size before relaxing)
 .stab          0x0000000000001494      0x1d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_split3.o)
                                        0x1e0 (size before relaxing)
 .stab          0x0000000000001668       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_zero.o)
                                         0x9c (size before relaxing)
 .stab          0x00000000000016f8       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x0000000000001740      0x4d4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(mulsf3x.o)
                                        0x4e0 (size before relaxing)
 .stab          0x0000000000001c14      0x3c0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(pow.o)
                                        0x3cc (size before relaxing)
 .stab          0x0000000000001fd4      0x288 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(exp.o)
                                        0x294 (size before relaxing)
 .stab          0x000000000000225c      0x1ec /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_powser.o)
                                        0x1f8 (size before relaxing)
 .stab          0x0000000000002448       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(inverse.o)
                                         0x90 (size before relaxing)
 .stab          0x00000000000024cc      0x2c4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(ldexp.o)
                                        0x2d0 (size before relaxing)
 .stab          0x0000000000002790      0x378 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(log.o)
                                        0x384 (size before relaxing)
 .stab          0x0000000000002b08      0x2a0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(modf.o)
                                        0x2ac (size before relaxing)
 .stab          0x0000000000002da8       0x48 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3.o)
                                         0x54 (size before relaxing)
 .stab          0x0000000000002df0      0x510 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(divsf3x.o)
                                        0x51c (size before relaxing)
 .stab          0x0000000000003300       0xe4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a(fp_mpack.o)
                                         0xf0 (size before relaxing)
 .stab          0x00000000000033e4      0x174 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(atoi.o)
                                        0x180 (size before relaxing)
 .stab          0x0000000000003558      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x0000000000003708       0x78 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(mul10.o)
                                         0x84 (size before relaxing)
 .stab          0x0000000000003780       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000      0x550
 *(.stabstr)
 .stabstr       0x0000000000000000      0x550 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./adc.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./lcd.o
 .comment       0x0000000000000000       0x12 ./main.o
 .comment       0x0000000000000000       0x12 ./tools.o
 .comment       0x0000000000000000       0x12 ./uart.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(project1.elf elf32-avr)
LOAD linker stubs
